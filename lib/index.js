// Generated by CoffeeScript 1.8.0
(function() {
  var CronJob, Job, exportObj, exports, _;

  CronJob = require("cron").CronJob;

  _ = require('underscore');

  exportObj = function(obj) {
    if (obj instanceof _) {
      return obj;
    }
    if (!(this instanceof exportObj)) {
      return new test(obj);
    }
    this._wrapped = obj;
  };

  exports = module.exports = exportObj;

  exports.test = exportObj;

  Job = (function() {
    function Job(pattern, func) {
      this.pattern = pattern;
      this.func = func;
      this.id = Math.floor(Math.random() * 10000) + Date.now();
      this.test();
    }

    Job.prototype.save = function(robot) {
      console.log("in save");
      return robot.brain.data.cronJobs.push(this);
    };

    Job.prototype.startJob = function() {
      return this.cronJob.start();
    };

    Job.prototype.stopJob = function() {
      return this.cronJob.stop();
    };

    Job.prototype.createCron = function(optionsHash) {
      var func;
      console.log("in create");
      func = this.func;
      this.cronJob = new CronJob(this.pattern, (function(_this) {
        return function() {
          return _this.func(optionsHash);
        };
      })(this), function() {
        return console.log("job ended");
      }, false);
      return console.log("finished creating");
    };

    Job.prototype.test = function() {
      return console.log("working!");
    };

    return Job;

  })();

  exportObj.create = function(pattern, func) {
    return new Job(pattern, func);
  };

}).call(this);
